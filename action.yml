name: 'Run FiveAM'
description: 'Runs a FiveAM test suite'
inputs:
  lisp:
    description: "Lisp to use (Roswell name)"
    required: false
    default: 'sbcl-bin'
  system:
    description: "ASDF system to load"
    required: true
  tests:
    description: "Suites and tests to run"
    required: true
runs:
  using: "composite"
  steps:
  # setup-lisp requires an env variable to be set, not matrix.lisp
    - name: Set LISP env var
      shell: bash
      run: echo "LISP=${{ inputs.lisp }}" >> $GITHUB_ENV

    # Set up and cache Lisp install
    - name: Grant All Perms to Make Cache Restoring Possible
      shell: bash
      run: |
        sudo mkdir -p /usr/local/etc/roswell
        sudo chown "${USER}" /usr/local/etc/roswell
        # Here the ros binary will be restored:
        sudo chown "${USER}" /usr/local/bin
    - name: Get Current Month
      shell: bash
      id: current-month
      run: |
        echo "::set-output name=value::$(date -u '+%Y-%m')"
    - name: Cache Roswell Setup
      id: cache
      uses: actions/cache@v2
      env:
        cache-name: cache-roswell
      with:
        path: |
          /usr/local/bin/ros
          ~/.cache/common-lisp/
          ~/.config/common-lisp/source-registry.conf.d
          ~/.roswell
          /usr/local/etc/roswell
          .qlot
        key: "${{ steps.current-month.outputs.value }}-${{ env.cache-name }}-${{ runner.os }}-${{ inputs.lisp }}-${{ hashFiles('qlfile.lock') }}"
    - name: Restore Path To Cached Files
      shell: bash
      run: |
        echo $HOME/.roswell/bin >> $GITHUB_PATH
        echo .qlot/bin >> $GITHUB_PATH
      if: steps.cache.outputs.cache-hit == 'true'
    # There's no good way to cache a brew installation, but it should be fast to re-install
    - name: Re-install Roswell on macOS
      shell: bash
      run: brew install roswell
      if: runner.os == 'macOS' && steps.cache.outputs.cache-hit == 'true'
    - uses: 40ants/setup-lisp@v2
      if: steps.cache.outputs.cache-hit != 'true'
     # These steps run our tests
     # Windows needs to be run with the msys2 shell due to how roswell is installed
    - name: Run tests (Non-Windows)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        # Install the roswell script for the test library
        ros install neil-lindquist/ci-utils # for run-fiveam
        
        # Run the tests
        run-fiveam -e t -l ${{ inputs.system }} ${{ inputs.tests }}
    - name: Run tests (Windows)
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        # Install the roswell script for the test library
        ros install neil-lindquist/ci-utils # for run-fiveam
          
        # Run the tests
        run-fiveam -e t -l ${{ inputs.system }} ${{ inputs.tests }}
